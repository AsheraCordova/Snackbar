//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSSnackbarPlugin\src\main\java\com\ashera\snackbar\SnackbarImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_SnackbarImpl")
#ifdef RESTRICT_SnackbarImpl
#define INCLUDE_ALL_SnackbarImpl 0
#else
#define INCLUDE_ALL_SnackbarImpl 1
#endif
#undef RESTRICT_SnackbarImpl

#if !defined (ASSnackbarImpl_) && (INCLUDE_ALL_SnackbarImpl || defined(INCLUDE_ASSnackbarImpl))
#define ASSnackbarImpl_

#define RESTRICT_BaseWidget 1
#define INCLUDE_ASBaseWidget 1
#include "BaseWidget.h"

@class ASWidgetAttribute;
@class IOSClass;
@protocol ASIFragment;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;
@protocol JavaUtilMap;

@interface ASSnackbarImpl : ASBaseWidget {
 @public
  id uiView_;
}
@property id uiView;

#pragma mark Public

- (instancetype)init;

- (id)asNativeWidget;

- (id)asWidget;

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params;

- (void)createView;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (IOSClass *)getViewClass;

- (void)loadAttributesWithNSString:(NSString *)attributeName;

- (id<ASIWidget>)newInstance OBJC_METHOD_FAMILY_NONE;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0
                    withNSString:(NSString *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ASSnackbarImpl)

J2OBJC_FIELD_SETTER(ASSnackbarImpl, uiView_, id)

inline NSString *ASSnackbarImpl_get_LOCAL_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASSnackbarImpl_LOCAL_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASSnackbarImpl, LOCAL_NAME, NSString *)

inline NSString *ASSnackbarImpl_get_GROUP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASSnackbarImpl_GROUP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASSnackbarImpl, GROUP_NAME, NSString *)

FOUNDATION_EXPORT void ASSnackbarImpl_init(ASSnackbarImpl *self);

FOUNDATION_EXPORT ASSnackbarImpl *new_ASSnackbarImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASSnackbarImpl *create_ASSnackbarImpl_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASSnackbarImpl)

@compatibility_alias ComAsheraSnackbarSnackbarImpl ASSnackbarImpl;

#endif

#if !defined (ASSnackbarImpl_ViewExt_) && (INCLUDE_ALL_SnackbarImpl || defined(INCLUDE_ASSnackbarImpl_ViewExt))
#define ASSnackbarImpl_ViewExt_

#define RESTRICT_View 1
#define INCLUDE_ADView 1
#include "View.h"

#define RESTRICT_IViewStub 1
#define INCLUDE_ASIViewStub 1
#include "IViewStub.h"

@class ASSnackbarImpl;

@interface ASSnackbarImpl_ViewExt : ADView < ASIViewStub >

#pragma mark Public

- (instancetype)initWithASSnackbarImpl:(ASSnackbarImpl *)outer$;

- (ADView *)inflateViewWithNSString:(NSString *)layout;

- (void)remeasure;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASSnackbarImpl_ViewExt)

FOUNDATION_EXPORT void ASSnackbarImpl_ViewExt_initWithASSnackbarImpl_(ASSnackbarImpl_ViewExt *self, ASSnackbarImpl *outer$);

FOUNDATION_EXPORT ASSnackbarImpl_ViewExt *new_ASSnackbarImpl_ViewExt_initWithASSnackbarImpl_(ASSnackbarImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASSnackbarImpl_ViewExt *create_ASSnackbarImpl_ViewExt_initWithASSnackbarImpl_(ASSnackbarImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASSnackbarImpl_ViewExt)

#endif

#if !defined (ASSnackbarImpl_DallocHandler_) && (INCLUDE_ALL_SnackbarImpl || defined(INCLUDE_ASSnackbarImpl_DallocHandler))
#define ASSnackbarImpl_DallocHandler_

#define RESTRICT_EventBusHandler 1
#define INCLUDE_ASEventBusHandler 1
#include "EventBusHandler.h"

@class ASSnackbarImpl;

@interface ASSnackbarImpl_DallocHandler : ASEventBusHandler

#pragma mark Public

- (instancetype)initWithASSnackbarImpl:(ASSnackbarImpl *)outer$
                          withNSString:(NSString *)type;

#pragma mark Protected

- (void)doPerformWithId:(id)payload;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASSnackbarImpl_DallocHandler)

FOUNDATION_EXPORT void ASSnackbarImpl_DallocHandler_initWithASSnackbarImpl_withNSString_(ASSnackbarImpl_DallocHandler *self, ASSnackbarImpl *outer$, NSString *type);

FOUNDATION_EXPORT ASSnackbarImpl_DallocHandler *new_ASSnackbarImpl_DallocHandler_initWithASSnackbarImpl_withNSString_(ASSnackbarImpl *outer$, NSString *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASSnackbarImpl_DallocHandler *create_ASSnackbarImpl_DallocHandler_initWithASSnackbarImpl_withNSString_(ASSnackbarImpl *outer$, NSString *type);

J2OBJC_TYPE_LITERAL_HEADER(ASSnackbarImpl_DallocHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_SnackbarImpl")
