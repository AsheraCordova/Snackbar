//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\AndroidJSnackbar\src\main\java\com\google\android\material\snackbar\SnackbarManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_SnackbarManager")
#ifdef RESTRICT_SnackbarManager
#define INCLUDE_ALL_SnackbarManager 0
#else
#define INCLUDE_ALL_SnackbarManager 1
#endif
#undef RESTRICT_SnackbarManager

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ADXSnackbarManager_) && (INCLUDE_ALL_SnackbarManager || defined(INCLUDE_ADXSnackbarManager))
#define ADXSnackbarManager_

@class ADXSnackbarManager_SnackbarRecord;
@protocol ADXSnackbarManager_Callback;

/*!
 @brief Manages <code>Snackbar</code>s.
 */
@interface ADXSnackbarManager : NSObject

#pragma mark Public

- (void)dismissWithADXSnackbarManager_Callback:(id<ADXSnackbarManager_Callback>)callback
                                       withInt:(jint)event;

- (jboolean)isCurrentWithADXSnackbarManager_Callback:(id<ADXSnackbarManager_Callback>)callback;

- (jboolean)isCurrentOrNextWithADXSnackbarManager_Callback:(id<ADXSnackbarManager_Callback>)callback;

/*!
 @brief Should be called when a Snackbar is no longer displayed.This is after any exit animation has
  finished.
 */
- (void)onDismissedWithADXSnackbarManager_Callback:(id<ADXSnackbarManager_Callback>)callback;

/*!
 @brief Should be called when a Snackbar is being shown.This is after any entrance animation has
  finished.
 */
- (void)onShownWithADXSnackbarManager_Callback:(id<ADXSnackbarManager_Callback>)callback;

- (void)pauseTimeoutWithADXSnackbarManager_Callback:(id<ADXSnackbarManager_Callback>)callback;

- (void)restoreTimeoutIfPausedWithADXSnackbarManager_Callback:(id<ADXSnackbarManager_Callback>)callback;

- (void)showWithInt:(jint)duration
withADXSnackbarManager_Callback:(id<ADXSnackbarManager_Callback>)callback;

#pragma mark Package-Private

+ (ADXSnackbarManager *)getInstance;

- (void)handleTimeoutWithADXSnackbarManager_SnackbarRecord:(ADXSnackbarManager_SnackbarRecord *)record;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXSnackbarManager)

inline jint ADXSnackbarManager_get_MSG_TIMEOUT(void);
#define ADXSnackbarManager_MSG_TIMEOUT 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXSnackbarManager, MSG_TIMEOUT, jint)

FOUNDATION_EXPORT ADXSnackbarManager *ADXSnackbarManager_getInstance(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXSnackbarManager)

@compatibility_alias ComGoogleAndroidMaterialSnackbarSnackbarManager ADXSnackbarManager;

#endif

#if !defined (ADXSnackbarManager_Callback_) && (INCLUDE_ALL_SnackbarManager || defined(INCLUDE_ADXSnackbarManager_Callback))
#define ADXSnackbarManager_Callback_

@protocol ADXSnackbarManager_Callback < JavaObject >

- (void)show;

- (void)dismissWithInt:(jint)event;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXSnackbarManager_Callback)

J2OBJC_TYPE_LITERAL_HEADER(ADXSnackbarManager_Callback)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_SnackbarManager")
