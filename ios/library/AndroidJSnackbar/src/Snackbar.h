//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\AndroidJSnackbar\src\main\java\com\google\android\material\snackbar\Snackbar.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Snackbar")
#ifdef RESTRICT_Snackbar
#define INCLUDE_ALL_Snackbar 0
#else
#define INCLUDE_ALL_Snackbar 1
#endif
#undef RESTRICT_Snackbar

#if !defined (ADXSnackbar_) && (INCLUDE_ALL_Snackbar || defined(INCLUDE_ADXSnackbar))
#define ADXSnackbar_

#define RESTRICT_BaseTransientBottomBar 1
#define INCLUDE_ADXBaseTransientBottomBar 1
#include "BaseTransientBottomBar.h"

@class ADColorStateList;
@class ADContext;
@class ADDrawable;
@class ADView;
@class ADViewGroup;
@class ADXBaseTransientBottomBar_SnackbarBaseLayout;
@protocol ADView_OnClickListener;
@protocol JavaLangCharSequence;

@interface ADXSnackbar : ADXBaseTransientBottomBar

#pragma mark Public

- (instancetype)initWithADContext:(ADContext *)context
                  withADViewGroup:(ADViewGroup *)parent
withADXBaseTransientBottomBar_SnackbarBaseLayout:(ADXBaseTransientBottomBar_SnackbarBaseLayout *)content;

- (void)dismissImmediate;

+ (ADXSnackbar *)makeWithADContext:(ADContext *)context
                        withADView:(ADView *)view
                      withNSString:(NSString *)text
                           withInt:(jint)duration;

+ (ADXSnackbar *)makeWithADView:(ADView *)view
                   withNSString:(NSString *)text
                        withInt:(jint)duration;

- (ADXSnackbar *)setActionWithNSString:(NSString *)text
            withADView_OnClickListener:(id<ADView_OnClickListener>)listener;

- (ADXSnackbar *)setActionTextColorWithADColorStateList:(ADColorStateList *)colors;

- (void)setBackgroundWithADDrawable:(ADDrawable *)background;

- (ADXSnackbar *)setDurationWithInt:(jint)arg0;

- (ADXSnackbar *)setMaxInlineActionWidthWithInt:(jint)width;

- (ADXSnackbar *)setTextWithJavaLangCharSequence:(id<JavaLangCharSequence>)message;

- (ADXSnackbar *)setTextColorWithADColorStateList:(ADColorStateList *)colors;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXSnackbar)

FOUNDATION_EXPORT ADXSnackbar *ADXSnackbar_makeWithADContext_withADView_withNSString_withInt_(ADContext *context, ADView *view, NSString *text, jint duration);

FOUNDATION_EXPORT void ADXSnackbar_initWithADContext_withADViewGroup_withADXBaseTransientBottomBar_SnackbarBaseLayout_(ADXSnackbar *self, ADContext *context, ADViewGroup *parent, ADXBaseTransientBottomBar_SnackbarBaseLayout *content);

FOUNDATION_EXPORT ADXSnackbar *new_ADXSnackbar_initWithADContext_withADViewGroup_withADXBaseTransientBottomBar_SnackbarBaseLayout_(ADContext *context, ADViewGroup *parent, ADXBaseTransientBottomBar_SnackbarBaseLayout *content) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXSnackbar *create_ADXSnackbar_initWithADContext_withADViewGroup_withADXBaseTransientBottomBar_SnackbarBaseLayout_(ADContext *context, ADViewGroup *parent, ADXBaseTransientBottomBar_SnackbarBaseLayout *content);

FOUNDATION_EXPORT ADXSnackbar *ADXSnackbar_makeWithADView_withNSString_withInt_(ADView *view, NSString *text, jint duration);

J2OBJC_TYPE_LITERAL_HEADER(ADXSnackbar)

@compatibility_alias ComGoogleAndroidMaterialSnackbarSnackbar ADXSnackbar;

#endif

#if !defined (ADXSnackbar_Callback_) && (INCLUDE_ALL_Snackbar || defined(INCLUDE_ADXSnackbar_Callback))
#define ADXSnackbar_Callback_

#define RESTRICT_BaseTransientBottomBar 1
#define INCLUDE_ADXBaseTransientBottomBar_BaseCallback 1
#include "BaseTransientBottomBar.h"

@class ADXSnackbar;

@interface ADXSnackbar_Callback : ADXBaseTransientBottomBar_BaseCallback

#pragma mark Public

- (instancetype)init;

- (void)onDismissedWithId:(ADXSnackbar *)transientBottomBar
                  withInt:(jint)event;

- (void)onShownWithId:(ADXSnackbar *)sb;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXSnackbar_Callback)

inline jint ADXSnackbar_Callback_get_DISMISS_EVENT_SWIPE(void);
#define ADXSnackbar_Callback_DISMISS_EVENT_SWIPE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXSnackbar_Callback, DISMISS_EVENT_SWIPE, jint)

inline jint ADXSnackbar_Callback_get_DISMISS_EVENT_ACTION(void);
#define ADXSnackbar_Callback_DISMISS_EVENT_ACTION 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXSnackbar_Callback, DISMISS_EVENT_ACTION, jint)

inline jint ADXSnackbar_Callback_get_DISMISS_EVENT_TIMEOUT(void);
#define ADXSnackbar_Callback_DISMISS_EVENT_TIMEOUT 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXSnackbar_Callback, DISMISS_EVENT_TIMEOUT, jint)

inline jint ADXSnackbar_Callback_get_DISMISS_EVENT_MANUAL(void);
#define ADXSnackbar_Callback_DISMISS_EVENT_MANUAL 3
J2OBJC_STATIC_FIELD_CONSTANT(ADXSnackbar_Callback, DISMISS_EVENT_MANUAL, jint)

inline jint ADXSnackbar_Callback_get_DISMISS_EVENT_CONSECUTIVE(void);
#define ADXSnackbar_Callback_DISMISS_EVENT_CONSECUTIVE 4
J2OBJC_STATIC_FIELD_CONSTANT(ADXSnackbar_Callback, DISMISS_EVENT_CONSECUTIVE, jint)

FOUNDATION_EXPORT void ADXSnackbar_Callback_init(ADXSnackbar_Callback *self);

FOUNDATION_EXPORT ADXSnackbar_Callback *new_ADXSnackbar_Callback_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXSnackbar_Callback *create_ADXSnackbar_Callback_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXSnackbar_Callback)

#endif

#if !defined (ADXSnackbar_SnackbarLayout_) && (INCLUDE_ALL_Snackbar || defined(INCLUDE_ADXSnackbar_SnackbarLayout))
#define ADXSnackbar_SnackbarLayout_

#define RESTRICT_BaseTransientBottomBar 1
#define INCLUDE_ADXBaseTransientBottomBar_SnackbarBaseLayout 1
#include "BaseTransientBottomBar.h"

@interface ADXSnackbar_SnackbarLayout : ADXBaseTransientBottomBar_SnackbarBaseLayout

#pragma mark Public

- (instancetype)init;

#pragma mark Protected

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXSnackbar_SnackbarLayout)

FOUNDATION_EXPORT void ADXSnackbar_SnackbarLayout_init(ADXSnackbar_SnackbarLayout *self);

FOUNDATION_EXPORT ADXSnackbar_SnackbarLayout *new_ADXSnackbar_SnackbarLayout_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXSnackbar_SnackbarLayout *create_ADXSnackbar_SnackbarLayout_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXSnackbar_SnackbarLayout)

#endif

#pragma pop_macro("INCLUDE_ALL_Snackbar")
