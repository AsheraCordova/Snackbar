//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\AndroidJSnackbar\src\main\java\com\google\android\material\snackbar\BaseTransientBottomBar.java
//

#include "BaseTransientBottomBar.h"
#include "Context.h"
#include "CoordinatorLayout.h"
#include "FrameLayout.h"
#include "Gravity.h"
#include "Handler.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Log.h"
#include "Looper.h"
#include "Message.h"
#include "PluginInvoker.h"
#include "Rect.h"
#include "SnackbarManager.h"
#include "SwipeHelper.h"
#include "View.h"
#include "ViewCompat.h"
#include "ViewGroup.h"
#include "ViewParent.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Runnable.h"
#include "java/lang/ref/WeakReference.h"

@class JavaLangRefWeakReference;
@protocol JavaLangRunnable;


@interface ADXBaseTransientBottomBar () {
 @public
  jint animationFadeInDuration_;
  jint animationFadeOutDuration_;
  jint animationSlideDuration_;
  ADViewGroup *targetParent_;
  ADContext *context_;
  jint duration_;
  jboolean gestureInsetBottomIgnored_;
  ADXBaseTransientBottomBar_Anchor *anchor_;
  jboolean anchorViewLayoutListenerEnabled_;
  id<JavaLangRunnable> bottomMarginGestureInsetRunnable_;
  jint extraBottomMarginWindowInset_;
  jint extraLeftMarginWindowInset_;
  jint extraRightMarginWindowInset_;
  jint extraBottomMarginGestureInset_;
  jint extraBottomMarginAnchorView_;
  jboolean pendingShowingView_;
  ADXBaseTransientBottomBar_Behavior *behavior_;
}

- (void)updateMargins;

- (jboolean)shouldUpdateGestureInset;

- (jboolean)isSwipeDismissable;

- (void)showViewImpl;

- (jint)getViewAbsoluteBottom;

- (void)setUpBehaviorWithADXCoordinatorLayout_LayoutParams:(ADXCoordinatorLayout_LayoutParams *)lp;

- (void)recalculateAndUpdateMargins;

- (jint)calculateBottomMarginForAnchorView;

- (void)onViewHiddenWithInt:(jint)event;

- (void)onViewShown;

@end

J2OBJC_FIELD_SETTER(ADXBaseTransientBottomBar, targetParent_, ADViewGroup *)
J2OBJC_FIELD_SETTER(ADXBaseTransientBottomBar, context_, ADContext *)
J2OBJC_FIELD_SETTER(ADXBaseTransientBottomBar, anchor_, ADXBaseTransientBottomBar_Anchor *)
J2OBJC_FIELD_SETTER(ADXBaseTransientBottomBar, bottomMarginGestureInsetRunnable_, id<JavaLangRunnable>)
J2OBJC_FIELD_SETTER(ADXBaseTransientBottomBar, behavior_, ADXBaseTransientBottomBar_Behavior *)

inline jint ADXBaseTransientBottomBar_get_DEFAULT_ANIMATION_FADE_IN_DURATION(void);
#define ADXBaseTransientBottomBar_DEFAULT_ANIMATION_FADE_IN_DURATION 150
J2OBJC_STATIC_FIELD_CONSTANT(ADXBaseTransientBottomBar, DEFAULT_ANIMATION_FADE_IN_DURATION, jint)

inline jint ADXBaseTransientBottomBar_get_DEFAULT_ANIMATION_FADE_OUT_DURATION(void);
#define ADXBaseTransientBottomBar_DEFAULT_ANIMATION_FADE_OUT_DURATION 75
J2OBJC_STATIC_FIELD_CONSTANT(ADXBaseTransientBottomBar, DEFAULT_ANIMATION_FADE_OUT_DURATION, jint)

inline jboolean ADXBaseTransientBottomBar_get_USE_OFFSET_API(void);
#define ADXBaseTransientBottomBar_USE_OFFSET_API false
J2OBJC_STATIC_FIELD_CONSTANT(ADXBaseTransientBottomBar, USE_OFFSET_API, jboolean)

inline NSString *ADXBaseTransientBottomBar_get_TAG(void);
static NSString *ADXBaseTransientBottomBar_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXBaseTransientBottomBar, TAG, NSString *)

__attribute__((unused)) static void ADXBaseTransientBottomBar_updateMargins(ADXBaseTransientBottomBar *self);

__attribute__((unused)) static jboolean ADXBaseTransientBottomBar_shouldUpdateGestureInset(ADXBaseTransientBottomBar *self);

__attribute__((unused)) static jboolean ADXBaseTransientBottomBar_isSwipeDismissable(ADXBaseTransientBottomBar *self);

__attribute__((unused)) static void ADXBaseTransientBottomBar_showView(ADXBaseTransientBottomBar *self);

__attribute__((unused)) static void ADXBaseTransientBottomBar_showViewImpl(ADXBaseTransientBottomBar *self);

__attribute__((unused)) static jint ADXBaseTransientBottomBar_getViewAbsoluteBottom(ADXBaseTransientBottomBar *self);

__attribute__((unused)) static void ADXBaseTransientBottomBar_setUpBehaviorWithADXCoordinatorLayout_LayoutParams_(ADXBaseTransientBottomBar *self, ADXCoordinatorLayout_LayoutParams *lp);

__attribute__((unused)) static void ADXBaseTransientBottomBar_recalculateAndUpdateMargins(ADXBaseTransientBottomBar *self);

__attribute__((unused)) static jint ADXBaseTransientBottomBar_calculateBottomMarginForAnchorView(ADXBaseTransientBottomBar *self);

__attribute__((unused)) static void ADXBaseTransientBottomBar_hideViewWithInt_(ADXBaseTransientBottomBar *self, jint event);

__attribute__((unused)) static void ADXBaseTransientBottomBar_onViewHiddenWithInt_(ADXBaseTransientBottomBar *self, jint event);

__attribute__((unused)) static void ADXBaseTransientBottomBar_onViewShown(ADXBaseTransientBottomBar *self);

@interface ADXBaseTransientBottomBar_1 : NSObject < JavaLangRunnable > {
 @public
  ADXBaseTransientBottomBar *this$0_;
}

- (instancetype)initWithADXBaseTransientBottomBar:(ADXBaseTransientBottomBar *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXBaseTransientBottomBar_1)

__attribute__((unused)) static void ADXBaseTransientBottomBar_1_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar_1 *self, ADXBaseTransientBottomBar *outer$);

__attribute__((unused)) static ADXBaseTransientBottomBar_1 *new_ADXBaseTransientBottomBar_1_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXBaseTransientBottomBar_1 *create_ADXBaseTransientBottomBar_1_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$);

@interface ADXBaseTransientBottomBar_2 : NSObject < ADXSnackbarManager_Callback > {
 @public
  ADXBaseTransientBottomBar *this$0_;
}

- (instancetype)initWithADXBaseTransientBottomBar:(ADXBaseTransientBottomBar *)outer$;

- (void)show;

- (void)dismissWithInt:(jint)event;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXBaseTransientBottomBar_2)

__attribute__((unused)) static void ADXBaseTransientBottomBar_2_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar_2 *self, ADXBaseTransientBottomBar *outer$);

__attribute__((unused)) static ADXBaseTransientBottomBar_2 *new_ADXBaseTransientBottomBar_2_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXBaseTransientBottomBar_2 *create_ADXBaseTransientBottomBar_2_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$);

@interface ADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener : NSObject

@end

@interface ADXBaseTransientBottomBar_3 : NSObject < ADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener > {
 @public
  ADXBaseTransientBottomBar *this$0_;
}

- (instancetype)initWithADXBaseTransientBottomBar:(ADXBaseTransientBottomBar *)outer$;

- (void)onDismissWithADView:(ADView *)view;

- (void)onDragStateChangedWithInt:(jint)state;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXBaseTransientBottomBar_3)

__attribute__((unused)) static void ADXBaseTransientBottomBar_3_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar_3 *self, ADXBaseTransientBottomBar *outer$);

__attribute__((unused)) static ADXBaseTransientBottomBar_3 *new_ADXBaseTransientBottomBar_3_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXBaseTransientBottomBar_3 *create_ADXBaseTransientBottomBar_3_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$);

@interface ADXBaseTransientBottomBar_SnackbarBaseLayout () {
 @public
  jint animationMode_;
  ADRect *originalMargins_;
  jboolean addingToTargetParent_;
}

@end

J2OBJC_FIELD_SETTER(ADXBaseTransientBottomBar_SnackbarBaseLayout, originalMargins_, ADRect *)

inline jint ADXBaseTransientBottomBar_SnackbarBaseLayout_get_maxWidth(void);
#define ADXBaseTransientBottomBar_SnackbarBaseLayout_maxWidth 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXBaseTransientBottomBar_SnackbarBaseLayout, maxWidth, jint)

inline jint ADXBaseTransientBottomBar_SnackbarBaseLayout_get_maxInlineActionWidth(void);
#define ADXBaseTransientBottomBar_SnackbarBaseLayout_maxInlineActionWidth 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXBaseTransientBottomBar_SnackbarBaseLayout, maxInlineActionWidth, jint)

@interface ADXBaseTransientBottomBar_Anchor () {
 @public
  JavaLangRefWeakReference *transientBottomBar_;
  JavaLangRefWeakReference *anchorView_;
}

- (instancetype)initWithADXBaseTransientBottomBar:(ADXBaseTransientBottomBar *)transientBottomBar
                                       withADView:(ADView *)anchorView;

@end

J2OBJC_FIELD_SETTER(ADXBaseTransientBottomBar_Anchor, transientBottomBar_, JavaLangRefWeakReference *)
J2OBJC_FIELD_SETTER(ADXBaseTransientBottomBar_Anchor, anchorView_, JavaLangRefWeakReference *)

__attribute__((unused)) static void ADXBaseTransientBottomBar_Anchor_initWithADXBaseTransientBottomBar_withADView_(ADXBaseTransientBottomBar_Anchor *self, ADXBaseTransientBottomBar *transientBottomBar, ADView *anchorView);

__attribute__((unused)) static ADXBaseTransientBottomBar_Anchor *new_ADXBaseTransientBottomBar_Anchor_initWithADXBaseTransientBottomBar_withADView_(ADXBaseTransientBottomBar *transientBottomBar, ADView *anchorView) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXBaseTransientBottomBar_Anchor *create_ADXBaseTransientBottomBar_Anchor_initWithADXBaseTransientBottomBar_withADView_(ADXBaseTransientBottomBar *transientBottomBar, ADView *anchorView);

@interface ADXBaseTransientBottomBar_4 : NSObject < ADHandler_Callback >

- (instancetype)init;

- (jboolean)handleMessageWithADMessage:(ADMessage *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXBaseTransientBottomBar_4)

__attribute__((unused)) static void ADXBaseTransientBottomBar_4_init(ADXBaseTransientBottomBar_4 *self);

__attribute__((unused)) static ADXBaseTransientBottomBar_4 *new_ADXBaseTransientBottomBar_4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXBaseTransientBottomBar_4 *create_ADXBaseTransientBottomBar_4_init(void);

@interface ADXBaseTransientBottomBar_Behavior () {
 @public
  ADXBaseTransientBottomBar *this$0_;
}

@end

@interface ADXBaseTransientBottomBar_Behavior_1 : NSObject < ASSwipeHelper_SwipeListener > {
 @public
  ADXBaseTransientBottomBar_Behavior *this$0_;
}

- (instancetype)initWithADXBaseTransientBottomBar_Behavior:(ADXBaseTransientBottomBar_Behavior *)outer$;

- (jboolean)onSwipedWithNSString:(NSString *)direction;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXBaseTransientBottomBar_Behavior_1)

__attribute__((unused)) static void ADXBaseTransientBottomBar_Behavior_1_initWithADXBaseTransientBottomBar_Behavior_(ADXBaseTransientBottomBar_Behavior_1 *self, ADXBaseTransientBottomBar_Behavior *outer$);

__attribute__((unused)) static ADXBaseTransientBottomBar_Behavior_1 *new_ADXBaseTransientBottomBar_Behavior_1_initWithADXBaseTransientBottomBar_Behavior_(ADXBaseTransientBottomBar_Behavior *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXBaseTransientBottomBar_Behavior_1 *create_ADXBaseTransientBottomBar_Behavior_1_initWithADXBaseTransientBottomBar_Behavior_(ADXBaseTransientBottomBar_Behavior *outer$);

J2OBJC_INITIALIZED_DEFN(ADXBaseTransientBottomBar)

ADHandler *ADXBaseTransientBottomBar_handler;

@implementation ADXBaseTransientBottomBar

- (void)updateMargins {
  ADXBaseTransientBottomBar_updateMargins(self);
}

- (jboolean)shouldUpdateGestureInset {
  return ADXBaseTransientBottomBar_shouldUpdateGestureInset(self);
}

- (jboolean)isSwipeDismissable {
  return ADXBaseTransientBottomBar_isSwipeDismissable(self);
}

- (ADXBaseTransientBottomBar *)setDurationWithInt:(jint)duration {
  self->duration_ = duration;
  return self;
}

- (jint)getDuration {
  return duration_;
}

- (ADView *)getAnchorView {
  return anchor_ == nil ? nil : [anchor_ getAnchorView];
}

- (void)show {
  [((ADXSnackbarManager *) nil_chk(ADXSnackbarManager_getInstance())) showWithInt:[self getDuration] withADXSnackbarManager_Callback:managerCallback_];
}

- (void)dismiss {
  [self dispatchDismissWithInt:ADXBaseTransientBottomBar_BaseCallback_DISMISS_EVENT_MANUAL];
}

- (void)dispatchDismissWithInt:(jint)event {
  [((ADXSnackbarManager *) nil_chk(ADXSnackbarManager_getInstance())) dismissWithADXSnackbarManager_Callback:managerCallback_ withInt:event];
}

- (ADXBaseTransientBottomBar_SwipeDismissBehavior *)getNewBehavior {
  return create_ADXBaseTransientBottomBar_Behavior_initWithADXBaseTransientBottomBar_(self);
}

- (void)showView {
  ADXBaseTransientBottomBar_showView(self);
}

- (void)showViewImpl {
  ADXBaseTransientBottomBar_showViewImpl(self);
}

- (jint)getViewAbsoluteBottom {
  return ADXBaseTransientBottomBar_getViewAbsoluteBottom(self);
}

- (void)setUpBehaviorWithADXCoordinatorLayout_LayoutParams:(ADXCoordinatorLayout_LayoutParams *)lp {
  ADXBaseTransientBottomBar_setUpBehaviorWithADXCoordinatorLayout_LayoutParams_(self, lp);
}

- (void)recalculateAndUpdateMargins {
  ADXBaseTransientBottomBar_recalculateAndUpdateMargins(self);
}

- (jint)calculateBottomMarginForAnchorView {
  return ADXBaseTransientBottomBar_calculateBottomMarginForAnchorView(self);
}

- (void)hideViewWithInt:(jint)event {
  ADXBaseTransientBottomBar_hideViewWithInt_(self, event);
}

- (instancetype)initWithADContext:(ADContext *)context
                  withADViewGroup:(ADViewGroup *)parent
withADXBaseTransientBottomBar_SnackbarBaseLayout:(ADXBaseTransientBottomBar_SnackbarBaseLayout *)view {
  ADXBaseTransientBottomBar_initWithADContext_withADViewGroup_withADXBaseTransientBottomBar_SnackbarBaseLayout_(self, context, parent, view);
  return self;
}

- (jint)getScreenHeight {
  return ASPluginInvoker_getScreenHeight();
}

- (void)animateViewIn {
}

- (void)animateViewOutWithInt:(jint)event {
}

- (jboolean)shouldAnimate {
  return false;
}

- (void)onViewHiddenWithInt:(jint)event {
  ADXBaseTransientBottomBar_onViewHiddenWithInt_(self, event);
}

- (void)onViewShown {
  ADXBaseTransientBottomBar_onViewShown(self);
}

- (void)dealloc {
  RELEASE_(targetParent_);
  RELEASE_(context_);
  RELEASE_(view_);
  RELEASE_(anchor_);
  RELEASE_(bottomMarginGestureInsetRunnable_);
  RELEASE_(behavior_);
  RELEASE_(managerCallback_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXBaseTransientBottomBar;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADView;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 1, -1, -1, -1, -1 },
    { NULL, "LADXBaseTransientBottomBar_SwipeDismissBehavior;", 0x4, -1, -1, -1, 4, -1, -1 },
    { NULL, "V", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 7, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(updateMargins);
  methods[1].selector = @selector(shouldUpdateGestureInset);
  methods[2].selector = @selector(isSwipeDismissable);
  methods[3].selector = @selector(setDurationWithInt:);
  methods[4].selector = @selector(getDuration);
  methods[5].selector = @selector(getAnchorView);
  methods[6].selector = @selector(show);
  methods[7].selector = @selector(dismiss);
  methods[8].selector = @selector(dispatchDismissWithInt:);
  methods[9].selector = @selector(getNewBehavior);
  methods[10].selector = @selector(showView);
  methods[11].selector = @selector(showViewImpl);
  methods[12].selector = @selector(getViewAbsoluteBottom);
  methods[13].selector = @selector(setUpBehaviorWithADXCoordinatorLayout_LayoutParams:);
  methods[14].selector = @selector(recalculateAndUpdateMargins);
  methods[15].selector = @selector(calculateBottomMarginForAnchorView);
  methods[16].selector = @selector(hideViewWithInt:);
  methods[17].selector = @selector(initWithADContext:withADViewGroup:withADXBaseTransientBottomBar_SnackbarBaseLayout:);
  methods[18].selector = @selector(getScreenHeight);
  methods[19].selector = @selector(animateViewIn);
  methods[20].selector = @selector(animateViewOutWithInt:);
  methods[21].selector = @selector(shouldAnimate);
  methods[22].selector = @selector(onViewHiddenWithInt:);
  methods[23].selector = @selector(onViewShown);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ANIMATION_MODE_SLIDE", "I", .constantValue.asInt = ADXBaseTransientBottomBar_ANIMATION_MODE_SLIDE, 0x19, -1, -1, -1, -1 },
    { "ANIMATION_MODE_FADE", "I", .constantValue.asInt = ADXBaseTransientBottomBar_ANIMATION_MODE_FADE, 0x19, -1, -1, -1, -1 },
    { "LENGTH_INDEFINITE", "I", .constantValue.asInt = ADXBaseTransientBottomBar_LENGTH_INDEFINITE, 0x19, -1, -1, -1, -1 },
    { "LENGTH_SHORT", "I", .constantValue.asInt = ADXBaseTransientBottomBar_LENGTH_SHORT, 0x19, -1, -1, -1, -1 },
    { "LENGTH_LONG", "I", .constantValue.asInt = ADXBaseTransientBottomBar_LENGTH_LONG, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_SLIDE_ANIMATION_DURATION", "I", .constantValue.asInt = ADXBaseTransientBottomBar_DEFAULT_SLIDE_ANIMATION_DURATION, 0x18, -1, -1, -1, -1 },
    { "DEFAULT_ANIMATION_FADE_DURATION", "I", .constantValue.asInt = ADXBaseTransientBottomBar_DEFAULT_ANIMATION_FADE_DURATION, 0x18, -1, -1, -1, -1 },
    { "DEFAULT_ANIMATION_FADE_IN_DURATION", "I", .constantValue.asInt = ADXBaseTransientBottomBar_DEFAULT_ANIMATION_FADE_IN_DURATION, 0x1a, -1, -1, -1, -1 },
    { "DEFAULT_ANIMATION_FADE_OUT_DURATION", "I", .constantValue.asInt = ADXBaseTransientBottomBar_DEFAULT_ANIMATION_FADE_OUT_DURATION, 0x1a, -1, -1, -1, -1 },
    { "animationFadeInDuration_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "animationFadeOutDuration_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "animationSlideDuration_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "handler", "LADHandler;", .constantValue.asLong = 0, 0x18, -1, 11, -1, -1 },
    { "MSG_SHOW", "I", .constantValue.asInt = ADXBaseTransientBottomBar_MSG_SHOW, 0x18, -1, -1, -1, -1 },
    { "MSG_DISMISS", "I", .constantValue.asInt = ADXBaseTransientBottomBar_MSG_DISMISS, 0x18, -1, -1, -1, -1 },
    { "USE_OFFSET_API", "Z", .constantValue.asBOOL = ADXBaseTransientBottomBar_USE_OFFSET_API, 0x1a, -1, -1, -1, -1 },
    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "targetParent_", "LADViewGroup;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "context_", "LADContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "view_", "LADXBaseTransientBottomBar_SnackbarBaseLayout;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "duration_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "gestureInsetBottomIgnored_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "anchor_", "LADXBaseTransientBottomBar_Anchor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "anchorViewLayoutListenerEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bottomMarginGestureInsetRunnable_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "extraBottomMarginWindowInset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extraLeftMarginWindowInset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extraRightMarginWindowInset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extraBottomMarginGestureInset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extraBottomMarginAnchorView_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pendingShowingView_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "behavior_", "LADXBaseTransientBottomBar_Behavior;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "managerCallback_", "LADXSnackbarManager_Callback;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setDuration", "I", "(I)TB;", "dispatchDismiss", "()Lcom/google/android/material/snackbar/BaseTransientBottomBar$SwipeDismissBehavior<+Lr/android/view/View;>;", "setUpBehavior", "LADXCoordinatorLayout_LayoutParams;", "hideView", "LADContext;LADViewGroup;LADXBaseTransientBottomBar_SnackbarBaseLayout;", "animateViewOut", "onViewHidden", &ADXBaseTransientBottomBar_handler, &ADXBaseTransientBottomBar_TAG, "LADXBaseTransientBottomBar_BaseCallback;LADXBaseTransientBottomBar_SnackbarBaseLayout;LADXBaseTransientBottomBar_Anchor;LADXBaseTransientBottomBar_Behavior;LADXBaseTransientBottomBar_SwipeDismissBehavior;", "<B:Lcom/google/android/material/snackbar/BaseTransientBottomBar<TB;>;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar = { "BaseTransientBottomBar", "com.google.android.material.snackbar", ptrTable, methods, fields, 7, 0x401, 24, 33, -1, 13, -1, 14, -1 };
  return &_ADXBaseTransientBottomBar;
}

+ (void)initialize {
  if (self == [ADXBaseTransientBottomBar class]) {
    JreStrongAssign(&ADXBaseTransientBottomBar_TAG, [ADXBaseTransientBottomBar_class_() getSimpleName]);
    {
      JreStrongAssignAndConsume(&ADXBaseTransientBottomBar_handler, new_ADHandler_initWithADLooper_withADHandler_Callback_(ADLooper_getMainLooper(), create_ADXBaseTransientBottomBar_4_init()));
    }
    J2OBJC_SET_INITIALIZED(ADXBaseTransientBottomBar)
  }
}

@end

void ADXBaseTransientBottomBar_updateMargins(ADXBaseTransientBottomBar *self) {
  ADViewGroup_LayoutParams *layoutParams = JreRetainedLocalValue([((ADXBaseTransientBottomBar_SnackbarBaseLayout *) nil_chk(self->view_)) getLayoutParams]);
  if (!([layoutParams isKindOfClass:[ADViewGroup_MarginLayoutParams class]]) || self->view_->originalMargins_ == nil) {
    ADLog_wWithNSString_withNSString_(ADXBaseTransientBottomBar_TAG, @"Unable to update margins because layout params are not MarginLayoutParams");
    return;
  }
  if ([self->view_ getParent] == nil) {
    return;
  }
  jint extraBottomMargin = [self getAnchorView] != nil ? self->extraBottomMarginAnchorView_ : self->extraBottomMarginWindowInset_;
  ADViewGroup_MarginLayoutParams *marginParams = (ADViewGroup_MarginLayoutParams *) cast_chk(layoutParams, [ADViewGroup_MarginLayoutParams class]);
  ((ADViewGroup_MarginLayoutParams *) nil_chk(marginParams))->bottomMargin_ = ((ADRect *) nil_chk(self->view_->originalMargins_))->bottom_ + extraBottomMargin;
  marginParams->leftMargin_ = self->view_->originalMargins_->left_ + self->extraLeftMarginWindowInset_;
  marginParams->rightMargin_ = self->view_->originalMargins_->right_ + self->extraRightMarginWindowInset_;
  marginParams->topMargin_ = self->view_->originalMargins_->top_;
  [self->view_ requestLayout];
  if (ADXBaseTransientBottomBar_shouldUpdateGestureInset(self)) {
    [self->view_ removeCallbacksWithJavaLangRunnable:self->bottomMarginGestureInsetRunnable_];
    [self->view_ postWithJavaLangRunnable:self->bottomMarginGestureInsetRunnable_];
  }
}

jboolean ADXBaseTransientBottomBar_shouldUpdateGestureInset(ADXBaseTransientBottomBar *self) {
  return self->extraBottomMarginGestureInset_ > 0 && !self->gestureInsetBottomIgnored_ && ADXBaseTransientBottomBar_isSwipeDismissable(self);
}

jboolean ADXBaseTransientBottomBar_isSwipeDismissable(ADXBaseTransientBottomBar *self) {
  ADViewGroup_LayoutParams *layoutParams = JreRetainedLocalValue([((ADXBaseTransientBottomBar_SnackbarBaseLayout *) nil_chk(self->view_)) getLayoutParams]);
  return [layoutParams isKindOfClass:[ADXCoordinatorLayout_LayoutParams class]] && [[((ADXCoordinatorLayout_LayoutParams *) nil_chk(((ADXCoordinatorLayout_LayoutParams *) cast_chk(layoutParams, [ADXCoordinatorLayout_LayoutParams class])))) getBehavior] isKindOfClass:[ADXBaseTransientBottomBar_SwipeDismissBehavior class]];
}

void ADXBaseTransientBottomBar_showView(ADXBaseTransientBottomBar *self) {
  if (self->behavior_ == nil) {
    ADViewGroup_LayoutParams *lp = JreRetainedLocalValue([((ADXBaseTransientBottomBar_SnackbarBaseLayout *) nil_chk(self->view_)) getLayoutParams]);
    if ([lp isKindOfClass:[ADXCoordinatorLayout_LayoutParams class]]) {
      ADXBaseTransientBottomBar_setUpBehaviorWithADXCoordinatorLayout_LayoutParams_(self, (ADXCoordinatorLayout_LayoutParams *) lp);
    }
    ADXBaseTransientBottomBar_recalculateAndUpdateMargins(self);
    [self->view_ setVisibilityWithInt:ADView_INVISIBLE];
  }
  if (ADXViewCompat_isLaidOutWithADView_(self->view_)) {
    ADXBaseTransientBottomBar_showViewImpl(self);
    return;
  }
  self->pendingShowingView_ = true;
}

void ADXBaseTransientBottomBar_showViewImpl(ADXBaseTransientBottomBar *self) {
  if ([self shouldAnimate]) {
    [self animateViewIn];
  }
  else {
    if ([((ADXBaseTransientBottomBar_SnackbarBaseLayout *) nil_chk(self->view_)) getParent] != nil) {
      [self->view_ setVisibilityWithInt:ADView_VISIBLE];
    }
    ADXBaseTransientBottomBar_onViewShown(self);
  }
}

jint ADXBaseTransientBottomBar_getViewAbsoluteBottom(ADXBaseTransientBottomBar *self) {
  IOSIntArray *absoluteLocation = [IOSIntArray arrayWithLength:2];
  [((ADXBaseTransientBottomBar_SnackbarBaseLayout *) nil_chk(self->view_)) getLocationOnScreenWithIntArray:absoluteLocation];
  return IOSIntArray_Get(absoluteLocation, 1) + [self->view_ getHeight];
}

void ADXBaseTransientBottomBar_setUpBehaviorWithADXCoordinatorLayout_LayoutParams_(ADXBaseTransientBottomBar *self, ADXCoordinatorLayout_LayoutParams *lp) {
  ADXCoordinatorLayout_LayoutParams *clp = JreRetainedLocalValue(lp);
  ADXBaseTransientBottomBar_SwipeDismissBehavior *behavior = self->behavior_ == nil ? [self getNewBehavior] : self->behavior_;
  if ([behavior isKindOfClass:[ADXBaseTransientBottomBar_Behavior class]]) {
    [((ADXBaseTransientBottomBar_Behavior *) behavior) setBaseTransientBottomBarWithADXBaseTransientBottomBar:self];
  }
  [behavior setListenerWithADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener:create_ADXBaseTransientBottomBar_3_initWithADXBaseTransientBottomBar_(self)];
  [((ADXCoordinatorLayout_LayoutParams *) nil_chk(clp)) setBehaviorWithADXCoordinatorLayout_Behavior:behavior];
  if ([self getAnchorView] == nil) {
    clp->insetEdge_ = ADGravity_BOTTOM;
  }
}

void ADXBaseTransientBottomBar_recalculateAndUpdateMargins(ADXBaseTransientBottomBar *self) {
  jint newBottomMarginAnchorView = ADXBaseTransientBottomBar_calculateBottomMarginForAnchorView(self);
  if (newBottomMarginAnchorView == self->extraBottomMarginAnchorView_) {
    return;
  }
  self->extraBottomMarginAnchorView_ = newBottomMarginAnchorView;
  ADXBaseTransientBottomBar_updateMargins(self);
}

jint ADXBaseTransientBottomBar_calculateBottomMarginForAnchorView(ADXBaseTransientBottomBar *self) {
  if ([self getAnchorView] == nil) {
    return 0;
  }
  IOSIntArray *anchorViewLocation = [IOSIntArray arrayWithLength:2];
  [((ADView *) nil_chk([self getAnchorView])) getLocationOnScreenWithIntArray:anchorViewLocation];
  jint anchorViewAbsoluteYTop = IOSIntArray_Get(anchorViewLocation, 1);
  IOSIntArray *targetParentLocation = [IOSIntArray arrayWithLength:2];
  [((ADViewGroup *) nil_chk(self->targetParent_)) getLocationOnScreenWithIntArray:targetParentLocation];
  jint targetParentAbsoluteYBottom = IOSIntArray_Get(targetParentLocation, 1) + [self->targetParent_ getHeight];
  return targetParentAbsoluteYBottom - anchorViewAbsoluteYTop;
}

void ADXBaseTransientBottomBar_hideViewWithInt_(ADXBaseTransientBottomBar *self, jint event) {
  if ([self shouldAnimate] && [((ADXBaseTransientBottomBar_SnackbarBaseLayout *) nil_chk(self->view_)) getVisibility] == ADView_VISIBLE) {
    [self animateViewOutWithInt:event];
  }
  else {
    ADXBaseTransientBottomBar_onViewHiddenWithInt_(self, event);
  }
}

void ADXBaseTransientBottomBar_initWithADContext_withADViewGroup_withADXBaseTransientBottomBar_SnackbarBaseLayout_(ADXBaseTransientBottomBar *self, ADContext *context, ADViewGroup *parent, ADXBaseTransientBottomBar_SnackbarBaseLayout *view) {
  NSObject_init(self);
  self->anchorViewLayoutListenerEnabled_ = false;
  JreStrongAssignAndConsume(&self->bottomMarginGestureInsetRunnable_, new_ADXBaseTransientBottomBar_1_initWithADXBaseTransientBottomBar_(self));
  JreStrongAssignAndConsume(&self->managerCallback_, new_ADXBaseTransientBottomBar_2_initWithADXBaseTransientBottomBar_(self));
  if (parent == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Transient bottom bar must have non-null parent");
  }
  JreStrongAssign(&self->view_, view);
  JreStrongAssign(&self->targetParent_, parent);
  JreStrongAssign(&self->context_, context);
  self->animationFadeInDuration_ = 0;
  self->animationFadeOutDuration_ = 0;
  self->animationSlideDuration_ = 0;
}

void ADXBaseTransientBottomBar_onViewHiddenWithInt_(ADXBaseTransientBottomBar *self, jint event) {
  [((ADXSnackbarManager *) nil_chk(ADXSnackbarManager_getInstance())) onDismissedWithADXSnackbarManager_Callback:self->managerCallback_];
  if (self->view_ != nil) {
    @try {
      ADView *parent = [self->view_ getRootView];
      [self->view_ removeFromParent];
      [((ADView *) nil_chk(parent)) requestLayout];
      [parent remeasure];
    }
    @catch (JavaLangException *e) {
    }
  }
}

void ADXBaseTransientBottomBar_onViewShown(ADXBaseTransientBottomBar *self) {
  [((ADXSnackbarManager *) nil_chk(ADXSnackbarManager_getInstance())) onShownWithADXSnackbarManager_Callback:self->managerCallback_];
  if (self->view_ != nil) {
    [self->view_ requestLayout];
    [self->view_ remeasure];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXBaseTransientBottomBar)

@implementation ADXBaseTransientBottomBar_BaseCallback

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXBaseTransientBottomBar_BaseCallback_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onDismissedWithId:(id)transientBottomBar
                  withInt:(jint)event {
}

- (void)onShownWithId:(id)transientBottomBar {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onDismissedWithId:withInt:);
  methods[2].selector = @selector(onShownWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DISMISS_EVENT_SWIPE", "I", .constantValue.asInt = ADXBaseTransientBottomBar_BaseCallback_DISMISS_EVENT_SWIPE, 0x19, -1, -1, -1, -1 },
    { "DISMISS_EVENT_ACTION", "I", .constantValue.asInt = ADXBaseTransientBottomBar_BaseCallback_DISMISS_EVENT_ACTION, 0x19, -1, -1, -1, -1 },
    { "DISMISS_EVENT_TIMEOUT", "I", .constantValue.asInt = ADXBaseTransientBottomBar_BaseCallback_DISMISS_EVENT_TIMEOUT, 0x19, -1, -1, -1, -1 },
    { "DISMISS_EVENT_MANUAL", "I", .constantValue.asInt = ADXBaseTransientBottomBar_BaseCallback_DISMISS_EVENT_MANUAL, 0x19, -1, -1, -1, -1 },
    { "DISMISS_EVENT_CONSECUTIVE", "I", .constantValue.asInt = ADXBaseTransientBottomBar_BaseCallback_DISMISS_EVENT_CONSECUTIVE, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onDismissed", "LNSObject;I", "(TB;I)V", "onShown", "LNSObject;", "(TB;)V", "LADXBaseTransientBottomBar;", "<B:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar_BaseCallback = { "BaseCallback", "com.google.android.material.snackbar", ptrTable, methods, fields, 7, 0x409, 3, 5, 6, -1, -1, 7, -1 };
  return &_ADXBaseTransientBottomBar_BaseCallback;
}

@end

void ADXBaseTransientBottomBar_BaseCallback_init(ADXBaseTransientBottomBar_BaseCallback *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXBaseTransientBottomBar_BaseCallback)

@implementation ADXBaseTransientBottomBar_1

- (instancetype)initWithADXBaseTransientBottomBar:(ADXBaseTransientBottomBar *)outer$ {
  ADXBaseTransientBottomBar_1_initWithADXBaseTransientBottomBar_(self, outer$);
  return self;
}

- (void)run {
  if (this$0_->view_ == nil || this$0_->context_ == nil) {
    return;
  }
  jint currentInsetBottom = [this$0_ getScreenHeight] - ADXBaseTransientBottomBar_getViewAbsoluteBottom(this$0_) + JreFpToInt([this$0_->view_ getTranslationY]);
  if (currentInsetBottom >= this$0_->extraBottomMarginGestureInset_) {
    return;
  }
  ADViewGroup_LayoutParams *layoutParams = JreRetainedLocalValue([this$0_->view_ getLayoutParams]);
  if (!([layoutParams isKindOfClass:[ADViewGroup_MarginLayoutParams class]])) {
    ADLog_wWithNSString_withNSString_(JreLoadStatic(ADXBaseTransientBottomBar, TAG), @"Unable to apply gesture inset because layout params are not MarginLayoutParams");
    return;
  }
  ADViewGroup_MarginLayoutParams *marginParams = (ADViewGroup_MarginLayoutParams *) cast_chk(layoutParams, [ADViewGroup_MarginLayoutParams class]);
  ((ADViewGroup_MarginLayoutParams *) nil_chk(marginParams))->bottomMargin_ += this$0_->extraBottomMarginGestureInset_ - currentInsetBottom;
  [this$0_->view_ requestLayout];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXBaseTransientBottomBar:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXBaseTransientBottomBar;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "LADXBaseTransientBottomBar;", "Lcom/google/android/material/snackbar/BaseTransientBottomBar<TB;>;" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar_1 = { "", "com.google.android.material.snackbar", ptrTable, methods, fields, 7, 0x8010, 2, 1, 0, -1, -1, -1, -1 };
  return &_ADXBaseTransientBottomBar_1;
}

@end

void ADXBaseTransientBottomBar_1_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar_1 *self, ADXBaseTransientBottomBar *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXBaseTransientBottomBar_1 *new_ADXBaseTransientBottomBar_1_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$) {
  J2OBJC_NEW_IMPL(ADXBaseTransientBottomBar_1, initWithADXBaseTransientBottomBar_, outer$)
}

ADXBaseTransientBottomBar_1 *create_ADXBaseTransientBottomBar_1_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$) {
  J2OBJC_CREATE_IMPL(ADXBaseTransientBottomBar_1, initWithADXBaseTransientBottomBar_, outer$)
}

@implementation ADXBaseTransientBottomBar_2

- (instancetype)initWithADXBaseTransientBottomBar:(ADXBaseTransientBottomBar *)outer$ {
  ADXBaseTransientBottomBar_2_initWithADXBaseTransientBottomBar_(self, outer$);
  return self;
}

- (void)show {
  [((ADHandler *) nil_chk(JreLoadStatic(ADXBaseTransientBottomBar, handler))) sendMessageWithADMessage:[JreLoadStatic(ADXBaseTransientBottomBar, handler) obtainMessageWithInt:ADXBaseTransientBottomBar_MSG_SHOW withId:this$0_]];
}

- (void)dismissWithInt:(jint)event {
  [((ADHandler *) nil_chk(JreLoadStatic(ADXBaseTransientBottomBar, handler))) sendMessageWithADMessage:[JreLoadStatic(ADXBaseTransientBottomBar, handler) obtainMessageWithInt:ADXBaseTransientBottomBar_MSG_DISMISS withInt:event withInt:0 withId:this$0_]];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXBaseTransientBottomBar:);
  methods[1].selector = @selector(show);
  methods[2].selector = @selector(dismissWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXBaseTransientBottomBar;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LADXBaseTransientBottomBar;", "dismiss", "I", "Lcom/google/android/material/snackbar/BaseTransientBottomBar<TB;>;" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar_2 = { "", "com.google.android.material.snackbar", ptrTable, methods, fields, 7, 0x8010, 3, 1, 0, -1, -1, -1, -1 };
  return &_ADXBaseTransientBottomBar_2;
}

@end

void ADXBaseTransientBottomBar_2_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar_2 *self, ADXBaseTransientBottomBar *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXBaseTransientBottomBar_2 *new_ADXBaseTransientBottomBar_2_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$) {
  J2OBJC_NEW_IMPL(ADXBaseTransientBottomBar_2, initWithADXBaseTransientBottomBar_, outer$)
}

ADXBaseTransientBottomBar_2 *create_ADXBaseTransientBottomBar_2_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$) {
  J2OBJC_CREATE_IMPL(ADXBaseTransientBottomBar_2, initWithADXBaseTransientBottomBar_, outer$)
}

@implementation ADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onDismissWithADView:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onDismiss", "LADView;", "LADXBaseTransientBottomBar_SwipeDismissBehavior;" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener = { "OnDismissListener", "com.google.android.material.snackbar", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
  return &_ADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener)

@implementation ADXBaseTransientBottomBar_3

- (instancetype)initWithADXBaseTransientBottomBar:(ADXBaseTransientBottomBar *)outer$ {
  ADXBaseTransientBottomBar_3_initWithADXBaseTransientBottomBar_(self, outer$);
  return self;
}

- (void)onDismissWithADView:(ADView *)view {
  if ([((ADView *) nil_chk(view)) getParent] != nil) {
    [view setVisibilityWithInt:ADView_GONE];
  }
  [this$0_ dispatchDismissWithInt:ADXBaseTransientBottomBar_BaseCallback_DISMISS_EVENT_SWIPE];
}

- (void)onDragStateChangedWithInt:(jint)state {
  switch (state) {
    case ADXBaseTransientBottomBar_SwipeDismissBehavior_STATE_DRAGGING:
    case ADXBaseTransientBottomBar_SwipeDismissBehavior_STATE_SETTLING:
    [((ADXSnackbarManager *) nil_chk(ADXSnackbarManager_getInstance())) pauseTimeoutWithADXSnackbarManager_Callback:this$0_->managerCallback_];
    break;
    case ADXBaseTransientBottomBar_SwipeDismissBehavior_STATE_IDLE:
    [((ADXSnackbarManager *) nil_chk(ADXSnackbarManager_getInstance())) restoreTimeoutIfPausedWithADXSnackbarManager_Callback:this$0_->managerCallback_];
    break;
    default:
    ;
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXBaseTransientBottomBar:);
  methods[1].selector = @selector(onDismissWithADView:);
  methods[2].selector = @selector(onDragStateChangedWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXBaseTransientBottomBar;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LADXBaseTransientBottomBar;", "onDismiss", "LADView;", "onDragStateChanged", "I", "Lcom/google/android/material/snackbar/BaseTransientBottomBar<TB;>;", "setUpBehaviorWithADXCoordinatorLayout_LayoutParams:" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar_3 = { "", "com.google.android.material.snackbar", ptrTable, methods, fields, 7, 0x8010, 3, 1, 0, -1, 6, -1, -1 };
  return &_ADXBaseTransientBottomBar_3;
}

@end

void ADXBaseTransientBottomBar_3_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar_3 *self, ADXBaseTransientBottomBar *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXBaseTransientBottomBar_3 *new_ADXBaseTransientBottomBar_3_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$) {
  J2OBJC_NEW_IMPL(ADXBaseTransientBottomBar_3, initWithADXBaseTransientBottomBar_, outer$)
}

ADXBaseTransientBottomBar_3 *create_ADXBaseTransientBottomBar_3_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$) {
  J2OBJC_CREATE_IMPL(ADXBaseTransientBottomBar_3, initWithADXBaseTransientBottomBar_, outer$)
}

@implementation ADXBaseTransientBottomBar_SnackbarBaseLayout

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXBaseTransientBottomBar_SnackbarBaseLayout_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec {
  [super onMeasureWithInt:widthMeasureSpec withInt:heightMeasureSpec];
}

- (void)addToTargetParentWithADViewGroup:(ADViewGroup *)targetParent {
  addingToTargetParent_ = true;
  [((ADViewGroup *) nil_chk(targetParent)) addViewWithADView:self];
  addingToTargetParent_ = false;
}

- (void)dealloc {
  RELEASE_(originalMargins_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onMeasureWithInt:withInt:);
  methods[2].selector = @selector(addToTargetParentWithADViewGroup:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "animationMode_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxWidth", "I", .constantValue.asInt = ADXBaseTransientBottomBar_SnackbarBaseLayout_maxWidth, 0x12, 4, -1, -1, -1 },
    { "maxInlineActionWidth", "I", .constantValue.asInt = ADXBaseTransientBottomBar_SnackbarBaseLayout_maxInlineActionWidth, 0x12, 5, -1, -1, -1 },
    { "originalMargins_", "LADRect;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "addingToTargetParent_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onMeasure", "II", "addToTargetParent", "LADViewGroup;", "maxWidth", "maxInlineActionWidth", "LADXBaseTransientBottomBar;" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar_SnackbarBaseLayout = { "SnackbarBaseLayout", "com.google.android.material.snackbar", ptrTable, methods, fields, 7, 0xc, 3, 5, 6, -1, -1, -1, -1 };
  return &_ADXBaseTransientBottomBar_SnackbarBaseLayout;
}

@end

void ADXBaseTransientBottomBar_SnackbarBaseLayout_init(ADXBaseTransientBottomBar_SnackbarBaseLayout *self) {
  ADFrameLayout_init(self);
}

ADXBaseTransientBottomBar_SnackbarBaseLayout *new_ADXBaseTransientBottomBar_SnackbarBaseLayout_init() {
  J2OBJC_NEW_IMPL(ADXBaseTransientBottomBar_SnackbarBaseLayout, init)
}

ADXBaseTransientBottomBar_SnackbarBaseLayout *create_ADXBaseTransientBottomBar_SnackbarBaseLayout_init() {
  J2OBJC_CREATE_IMPL(ADXBaseTransientBottomBar_SnackbarBaseLayout, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXBaseTransientBottomBar_SnackbarBaseLayout)

@implementation ADXBaseTransientBottomBar_Anchor

- (instancetype)initWithADXBaseTransientBottomBar:(ADXBaseTransientBottomBar *)transientBottomBar
                                       withADView:(ADView *)anchorView {
  ADXBaseTransientBottomBar_Anchor_initWithADXBaseTransientBottomBar_withADView_(self, transientBottomBar, anchorView);
  return self;
}

- (ADView *)getAnchorView {
  return [((JavaLangRefWeakReference *) nil_chk(anchorView_)) get];
}

- (void)dealloc {
  RELEASE_(transientBottomBar_);
  RELEASE_(anchorView_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LADView;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXBaseTransientBottomBar:withADView:);
  methods[1].selector = @selector(getAnchorView);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "transientBottomBar_", "LJavaLangRefWeakReference;", .constantValue.asLong = 0, 0x12, -1, -1, 1, -1 },
    { "anchorView_", "LJavaLangRefWeakReference;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LADXBaseTransientBottomBar;LADView;", "Ljava/lang/ref/WeakReference<Lcom/google/android/material/snackbar/BaseTransientBottomBar;>;", "Ljava/lang/ref/WeakReference<Lr/android/view/View;>;", "LADXBaseTransientBottomBar;" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar_Anchor = { "Anchor", "com.google.android.material.snackbar", ptrTable, methods, fields, 7, 0x8, 2, 2, 3, -1, -1, -1, -1 };
  return &_ADXBaseTransientBottomBar_Anchor;
}

@end

void ADXBaseTransientBottomBar_Anchor_initWithADXBaseTransientBottomBar_withADView_(ADXBaseTransientBottomBar_Anchor *self, ADXBaseTransientBottomBar *transientBottomBar, ADView *anchorView) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->transientBottomBar_, new_JavaLangRefWeakReference_initWithId_(transientBottomBar));
  JreStrongAssignAndConsume(&self->anchorView_, new_JavaLangRefWeakReference_initWithId_(anchorView));
}

ADXBaseTransientBottomBar_Anchor *new_ADXBaseTransientBottomBar_Anchor_initWithADXBaseTransientBottomBar_withADView_(ADXBaseTransientBottomBar *transientBottomBar, ADView *anchorView) {
  J2OBJC_NEW_IMPL(ADXBaseTransientBottomBar_Anchor, initWithADXBaseTransientBottomBar_withADView_, transientBottomBar, anchorView)
}

ADXBaseTransientBottomBar_Anchor *create_ADXBaseTransientBottomBar_Anchor_initWithADXBaseTransientBottomBar_withADView_(ADXBaseTransientBottomBar *transientBottomBar, ADView *anchorView) {
  J2OBJC_CREATE_IMPL(ADXBaseTransientBottomBar_Anchor, initWithADXBaseTransientBottomBar_withADView_, transientBottomBar, anchorView)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXBaseTransientBottomBar_Anchor)

@implementation ADXBaseTransientBottomBar_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXBaseTransientBottomBar_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)handleMessageWithADMessage:(ADMessage *)message {
  switch (((ADMessage *) nil_chk(message))->what_) {
    case ADXBaseTransientBottomBar_MSG_SHOW:
    ADXBaseTransientBottomBar_showView(nil_chk(((ADXBaseTransientBottomBar *) cast_chk(message->obj_, [ADXBaseTransientBottomBar class]))));
    return true;
    case ADXBaseTransientBottomBar_MSG_DISMISS:
    ADXBaseTransientBottomBar_hideViewWithInt_(nil_chk(((ADXBaseTransientBottomBar *) cast_chk(message->obj_, [ADXBaseTransientBottomBar class]))), message->arg1_);
    return true;
    default:
    return false;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(handleMessageWithADMessage:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "handleMessage", "LADMessage;", "LADXBaseTransientBottomBar;" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar_4 = { "", "com.google.android.material.snackbar", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, -1, -1 };
  return &_ADXBaseTransientBottomBar_4;
}

@end

void ADXBaseTransientBottomBar_4_init(ADXBaseTransientBottomBar_4 *self) {
  NSObject_init(self);
}

ADXBaseTransientBottomBar_4 *new_ADXBaseTransientBottomBar_4_init() {
  J2OBJC_NEW_IMPL(ADXBaseTransientBottomBar_4, init)
}

ADXBaseTransientBottomBar_4 *create_ADXBaseTransientBottomBar_4_init() {
  J2OBJC_CREATE_IMPL(ADXBaseTransientBottomBar_4, init)
}

@implementation ADXBaseTransientBottomBar_SwipeDismissBehavior

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXBaseTransientBottomBar_SwipeDismissBehavior_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setListenerWithADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener:(id<ADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener>)onDismissListener {
  JreStrongAssign(&self->onDismissListener_, onDismissListener);
}

- (void)dealloc {
  RELEASE_(onDismissListener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setListenerWithADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "STATE_IDLE", "I", .constantValue.asInt = ADXBaseTransientBottomBar_SwipeDismissBehavior_STATE_IDLE, 0x1c, -1, -1, -1, -1 },
    { "STATE_SETTLING", "I", .constantValue.asInt = ADXBaseTransientBottomBar_SwipeDismissBehavior_STATE_SETTLING, 0x1c, -1, -1, -1, -1 },
    { "STATE_DRAGGING", "I", .constantValue.asInt = ADXBaseTransientBottomBar_SwipeDismissBehavior_STATE_DRAGGING, 0x1c, -1, -1, -1, -1 },
    { "onDismissListener_", "LADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setListener", "LADXBaseTransientBottomBar_SwipeDismissBehavior_OnDismissListener;", "LADXBaseTransientBottomBar;", "<T:Ljava/lang/Object;>Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior<Lr/android/view/View;>;" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar_SwipeDismissBehavior = { "SwipeDismissBehavior", "com.google.android.material.snackbar", ptrTable, methods, fields, 7, 0x8, 2, 4, 2, 1, -1, 3, -1 };
  return &_ADXBaseTransientBottomBar_SwipeDismissBehavior;
}

@end

void ADXBaseTransientBottomBar_SwipeDismissBehavior_init(ADXBaseTransientBottomBar_SwipeDismissBehavior *self) {
  ADXCoordinatorLayout_Behavior_init(self);
}

ADXBaseTransientBottomBar_SwipeDismissBehavior *new_ADXBaseTransientBottomBar_SwipeDismissBehavior_init() {
  J2OBJC_NEW_IMPL(ADXBaseTransientBottomBar_SwipeDismissBehavior, init)
}

ADXBaseTransientBottomBar_SwipeDismissBehavior *create_ADXBaseTransientBottomBar_SwipeDismissBehavior_init() {
  J2OBJC_CREATE_IMPL(ADXBaseTransientBottomBar_SwipeDismissBehavior, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXBaseTransientBottomBar_SwipeDismissBehavior)

@implementation ADXBaseTransientBottomBar_Behavior

- (instancetype)initWithADXBaseTransientBottomBar:(ADXBaseTransientBottomBar *)outer$ {
  ADXBaseTransientBottomBar_Behavior_initWithADXBaseTransientBottomBar_(self, outer$);
  return self;
}

- (void)setBaseTransientBottomBarWithADXBaseTransientBottomBar:(ADXBaseTransientBottomBar *)baseTransientBottomBar {
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXBaseTransientBottomBar:);
  methods[1].selector = @selector(setBaseTransientBottomBarWithADXBaseTransientBottomBar:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXBaseTransientBottomBar;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LADXBaseTransientBottomBar;", "setBaseTransientBottomBar", "(Lcom/google/android/material/snackbar/BaseTransientBottomBar<TB;>;)V", "Lcom/google/android/material/snackbar/BaseTransientBottomBar<TB;>;" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar_Behavior = { "Behavior", "com.google.android.material.snackbar", ptrTable, methods, fields, 7, 0x0, 2, 1, 0, -1, -1, -1, -1 };
  return &_ADXBaseTransientBottomBar_Behavior;
}

@end

void ADXBaseTransientBottomBar_Behavior_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar_Behavior *self, ADXBaseTransientBottomBar *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  ADXBaseTransientBottomBar_SwipeDismissBehavior_init(self);
  [((ADXBaseTransientBottomBar_SnackbarBaseLayout *) nil_chk(outer$->view_)) setMyAttributeWithNSString:@"onSwiped" withId:create_ADXBaseTransientBottomBar_Behavior_1_initWithADXBaseTransientBottomBar_Behavior_(self)];
}

ADXBaseTransientBottomBar_Behavior *new_ADXBaseTransientBottomBar_Behavior_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$) {
  J2OBJC_NEW_IMPL(ADXBaseTransientBottomBar_Behavior, initWithADXBaseTransientBottomBar_, outer$)
}

ADXBaseTransientBottomBar_Behavior *create_ADXBaseTransientBottomBar_Behavior_initWithADXBaseTransientBottomBar_(ADXBaseTransientBottomBar *outer$) {
  J2OBJC_CREATE_IMPL(ADXBaseTransientBottomBar_Behavior, initWithADXBaseTransientBottomBar_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXBaseTransientBottomBar_Behavior)

@implementation ADXBaseTransientBottomBar_Behavior_1

- (instancetype)initWithADXBaseTransientBottomBar_Behavior:(ADXBaseTransientBottomBar_Behavior *)outer$ {
  ADXBaseTransientBottomBar_Behavior_1_initWithADXBaseTransientBottomBar_Behavior_(self, outer$);
  return self;
}

- (jboolean)onSwipedWithNSString:(NSString *)direction {
  if ([((NSString *) nil_chk(direction)) isEqual:@"right"]) {
    if (this$0_->onDismissListener_ != nil) {
      [this$0_->onDismissListener_ onDismissWithADView:this$0_->this$0_->view_];
    }
  }
  return true;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXBaseTransientBottomBar_Behavior:);
  methods[1].selector = @selector(onSwipedWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXBaseTransientBottomBar_Behavior;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADXBaseTransientBottomBar_Behavior;", "onSwiped", "LNSString;", "initWithADXBaseTransientBottomBar:" };
  static const J2ObjcClassInfo _ADXBaseTransientBottomBar_Behavior_1 = { "", "com.google.android.material.snackbar", ptrTable, methods, fields, 7, 0x8010, 2, 1, 0, -1, 3, -1, -1 };
  return &_ADXBaseTransientBottomBar_Behavior_1;
}

@end

void ADXBaseTransientBottomBar_Behavior_1_initWithADXBaseTransientBottomBar_Behavior_(ADXBaseTransientBottomBar_Behavior_1 *self, ADXBaseTransientBottomBar_Behavior *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXBaseTransientBottomBar_Behavior_1 *new_ADXBaseTransientBottomBar_Behavior_1_initWithADXBaseTransientBottomBar_Behavior_(ADXBaseTransientBottomBar_Behavior *outer$) {
  J2OBJC_NEW_IMPL(ADXBaseTransientBottomBar_Behavior_1, initWithADXBaseTransientBottomBar_Behavior_, outer$)
}

ADXBaseTransientBottomBar_Behavior_1 *create_ADXBaseTransientBottomBar_Behavior_1_initWithADXBaseTransientBottomBar_Behavior_(ADXBaseTransientBottomBar_Behavior *outer$) {
  J2OBJC_CREATE_IMPL(ADXBaseTransientBottomBar_Behavior_1, initWithADXBaseTransientBottomBar_Behavior_, outer$)
}
